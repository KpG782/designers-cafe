---
const categories = [
  {
    key: "coffee",
    name: "Coffee",
    color: "bg-[var(--coffee-900)] text-white",
    image: "/assets/peppermint.jpg",
    desc: "Classic espresso-based drinks and house blends for every coffee lover.",
    items: [
      { name: "Americano", price: 65, desc: "Smooth and bold espresso with hot water." },
      { name: "Cappuccino", price: 80, desc: "Espresso, steamed milk, and foam." },
      { name: "Dark Mocha", price: 105, desc: "Rich chocolate and espresso blend." },
      { name: "Designers Choice", price: 105, desc: "Our signature blend for creative minds." },
      { name: "Hazelnut Coffee", price: 105, desc: "Nutty, aromatic, and comforting." },
      { name: "Irish Cream", price: 105, desc: "Espresso with a creamy Irish twist." },
      { name: "Oat Latte 16oz ONLY", price: 115, desc: "Smooth oat milk with espresso." },
      { name: "Salted Caramel Macchiato", price: 105, desc: "Sweet, salty, and creamy layers." },
      { name: "Spanish Latte", price: 105, desc: "Espresso with sweetened milk." },
      { name: "Wild Peppermint Mocha", price: 135, desc: "Peppermint and chocolate fusion." }
    ]
  },
  {
    key: "frappuccino",
    name: "Frappés",
    color: "bg-[var(--pencil)] text-[var(--coffee-900)]",
    image: "/assets/peppermint.jpg",
    desc: "Icy, blended drinks in creative flavors for a refreshing treat.",
    items: [
      { name: "Chocolate Frappe", price: 140, desc: "Blended chocolate and espresso." },
      { name: "Dark Mocha Frappe", price: 140, desc: "Intense mocha, ice-blended." },
      { name: "Espresso Frappe", price: 140, desc: "Classic espresso, cool and creamy." },
      { name: "Irish Vanilla Frappe", price: 140, desc: "Vanilla and Irish cream fusion." },
      { name: "Matcha Frappe", price: 150, desc: "Japanese matcha, smooth and cold." },
      { name: "Salted Butterscotch Frappe", price: 140, desc: "Sweet, salty, and buttery." },
      { name: "Strawberry Frappe", price: 140, desc: "Fresh strawberry blended delight." },
      { name: "Wild Peppermint Mocha Frappe", price: 140, desc: "Peppermint, chocolate, and espresso." }
    ]
  },
  {
    key: "food",
    name: "Food",
    color: "bg-[var(--coffee-600)] text-white",
    image: "/assets/peppermint.jpg",
    desc: "Hearty meals, pasta, and snacks to pair with your favorite drink.",
    items: [
      { name: "Burger Steak", price: 110, desc: "Juicy patty with savory sauce." },
      { name: "Chicken Fillet", price: 110, desc: "Crispy chicken, perfect for lunch." },
      { name: "Fish Fry", price: 110, desc: "Golden fried fish fillet." },
      { name: "Bacon Carbonara Ala Carte", price: 100, desc: "Creamy pasta with bacon." },
      { name: "Creamy Tuna Pesto Ala Carte", price: 100, desc: "Tuna and pesto pasta." },
      { name: "Banana Bread Slice", price: 35, desc: "Moist, homemade banana bread." },
      { name: "Medium Croissant", price: 50, desc: "Flaky, buttery croissant." },
      { name: "Pan Au Chocolat", price: 80, desc: "Chocolate-filled pastry." },
      { name: "Cheese Sticks", price: 150, desc: "Crispy, cheesy snack." },
      { name: "Nachos With Beef Salsa", price: 150, desc: "Loaded nachos with beef salsa." },
      { name: "Potato Fries (Ketchup Dip)", price: 150, desc: "Classic fries with ketchup." }
    ]
  },
  {
    key: "noncoffee",
    name: "Non-Coffee",
    color: "bg-[#2563eb] text-white",
    image: "/assets/peppermint.jpg",
    desc: "Delicious drinks for non-coffee lovers and kids.",
    items: [
      { name: "Hot Choco", price: 85, desc: "Rich and creamy hot chocolate." },
      { name: "Iced Choco With Whip Cream 16oz Only", price: 115, desc: "Iced chocolate topped with whip." },
      { name: "Pink Pilates", price: 115, desc: "Fruity, pink, and refreshing." },
      { name: "Rebellious Drink", price: 115, desc: "Unique, creative, and fun." },
      { name: "Strawberry Latte With Whip Cream 16oz Only", price: 115, desc: "Strawberry and milk, whipped cream." },
      { name: "Unli Soda", price: 300, desc: "Unlimited soda for your group." }
    ]
  },
  {
    key: "add-ons",
    name: "Add Ons",
    color: "bg-[var(--cream)] text-[var(--coffee-900)] border border-[var(--coffee-200)]",
    image: "/assets/peppermint.jpg",
    desc: "Customize your order with extra shots, dips, and more.",
    items: [
      { name: "Espresso Shot", price: 20, desc: "Extra caffeine boost." },
      { name: "Extra Dip", price: 10, desc: "Add more flavor to your meal." },
      { name: "Extra Rice", price: 15, desc: "For a more filling meal." },
      { name: "Extra Whip", price: 20, desc: "More whipped cream, please!" },
      { name: "Shotts", price: 20, desc: "Extra flavor shots." },
      { name: "Soy Or Oat Milk", price: 30, desc: "Dairy-free milk options." },
      { name: "Takeouts", price: 10, desc: "For your takeout needs." },
      { name: "Upsize Coffee 22oz", price: 15, desc: "Bigger coffee, more energy." },
      { name: "Upsize SodaMilky 22oz", price: 15, desc: "Bigger soda milky." }
    ]
  },
  {
    key: "accessories",
    name: "Accessories",
    color: "bg-[var(--coffee-200)] text-[var(--coffee-900)]",
    image: "/assets/peppermint.jpg",
    desc: "Fun and creative accessories for your drinks and style.",
    items: [
      { name: "Bracelet", price: 60, desc: "Handmade, creative bracelet." },
      { name: "CP Charmer", price: 65, desc: "Cute phone charm." }
    ]
  }
];

let selectedCategory = categories[0].key;
---

<section class="py-20" style="background: var(--cream, #F8F4F0);" id="menu">
  <div class="absolute inset-0 opacity-5 pointer-events-none">
    <div class="grid grid-cols-8 gap-4 h-full">
      <div style="background: var(--pencil, #D4943A);"></div>
      <div style="background: var(--coffee-400, #D4943A);"></div>
      <div style="background: var(--pencil, #D4943A);"></div>
      <div style="background: var(--coffee-400, #D4943A);"></div>
      <div style="background: var(--pencil, #D4943A);"></div>
      <div style="background: var(--coffee-400, #D4943A);"></div>
      <div style="background: var(--pencil, #D4943A);"></div>
      <div style="background: var(--coffee-400, #D4943A);"></div>
    </div>
  </div>
  <div class="container mx-auto px-6 relative z-10">
    <div class="text-center mb-16">
      <h2 class="text-4xl md:text-5xl font-serif font-bold mb-6" style="color: var(--coffee-900, #2E1C09); font-family: var(--font-serif);">
        Our <span style="color: var(--pencil);">Signature</span> Creations
      </h2>
      <p class="text-lg max-w-2xl mx-auto" style="color: var(--coffee-600, #8B4B1A); font-family: var(--font-sans);">
        Each drink is crafted with the precision of a designer and the passion of an artist. 
        Explore our curated collection of coffee perfection.
      </p>
    </div>
    <!-- Menu Categories -->
    <div class="flex flex-wrap justify-center gap-4 mb-12" id="menu-categories">
      {categories.map((cat, i) => (
        <button
          class={`category-btn px-6 py-3 rounded-full font-medium transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-[var(--pencil)] focus:ring-offset-2 ${selectedCategory === cat.key ? cat.color + " ring-2 ring-[var(--pencil)]" : "glass-morphism text-[var(--coffee-700)] hover:bg-[var(--pencil)] hover:text-white"}`}
          data-category={cat.key}
          type="button"
          style={`animation-delay: ${0.1 + i * 0.1}s; opacity:0;`}
        >
          {cat.name}
        </button>
      ))}
    </div>
    <!-- Category Description -->
    <div class="text-center mb-8">
      <p class="text-base md:text-lg font-medium transition-all duration-300 min-h-[1.5em]" id="category-description" style="color: var(--coffee-700, #6B3614); font-family: var(--font-sans);">
        {categories.find(cat => cat.key === selectedCategory)?.desc}
      </p>
    </div>
    <!-- Menu Items Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="menu-items">
      {categories.map(cat =>
        cat.items.map((item, idx) => (
          <div class={`menu-item menu-item-${cat.key} rounded-2xl p-6 shadow-lg transition-all duration-300 transform hover:-translate-y-2 hover:shadow-xl`}
            style={`background: var(--coffee-50, #FDF7F0); border: 2px solid var(--coffee-200, #efcca5); display: ${cat.key === selectedCategory ? 'block' : 'none'}; opacity:0;`}>
            <div class="flex items-center justify-between mb-4">
              <h3 class="text-xl font-bold" style="color: var(--coffee-900, #2E1C09); font-family: var(--font-serif);">{item.name}</h3>
              <span class="text-2xl font-bold" style="color: var(--pencil, #D4943A); font-family: var(--font-sans);">₱{item.price}</span>
            </div>
            <div class="mb-4 flex justify-center">
              <div class="w-24 h-24 rounded-full overflow-hidden shadow-inner border-4" style="border-color: var(--coffee-100, #F7E6D3); background: var(--cream, #F8F4F0); display: flex; align-items: center; justify-content: center;">
                <img src={cat.image} alt={item.name} class="w-20 h-20 object-cover rounded-full" />
              </div>
            </div>
            <p class="text-sm mb-4 text-center" style="color: var(--coffee-700, #6B3614); font-family: var(--font-sans);">{item.desc}</p>
          </div>
        ))
      )}
    </div>
    <!-- <div class="text-center mt-12">
      <button class="view-full-menu bg-transparent border-2 px-8 py-4 rounded-full font-semibold hover:bg-[var(--pencil)] hover:text-white transition-all duration-300 transform hover:scale-105"
        style="border-color: var(--pencil, #D4943A); color: var(--pencil, #D4943A); font-family: var(--font-sans);">
        View Full Menu
      </button>
    </div> -->
  </div>
</section>

<style>
  @keyframes fade-in-up {
    from { opacity: 0; transform: translateY(32px);}
    to { opacity: 1; transform: translateY(0);}
  }
  @keyframes fade-in {
    from { opacity: 0; transform: translateY(24px);}
    to { opacity: 1; transform: translateY(0);}
  }
  .animate-fade-in-up {
    animation: fade-in-up 0.7s cubic-bezier(.4,0,.2,1) both;
  }
  .animate-fade-in {
    animation: fade-in 0.7s cubic-bezier(.4,0,.2,1) both;
  }
  .glass-morphism {
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    border: 1px solid rgba(255, 255, 255, 0.2);
  }
</style>

<script>
  window.addEventListener('DOMContentLoaded', () => {
    const menuSection = document.getElementById('menu');
    const categoryButtons = document.querySelectorAll('.category-btn');
    const menuItems = document.querySelectorAll('.menu-item');
    const categoryDescription = document.getElementById('category-description');
    let currentCategory = 'coffee';
    let animated = false;

    const categories = [
      {
        key: "coffee",
        name: "Coffee",
        color: "bg-[var(--coffee-900)] text-white",
        desc: "Classic espresso-based drinks and house blends for every coffee lover."
      },
      {
        key: "frappuccino",
        name: "Frappés",
        color: "bg-[var(--pencil)] text-[var(--coffee-900)]",
        desc: "Icy, blended drinks in creative flavors for a refreshing treat."
      },
      {
        key: "food",
        name: "Food",
        color: "bg-[var(--coffee-600)] text-white",
        desc: "Hearty meals, pasta, and snacks to pair with your favorite drink."
      },
      {
        key: "noncoffee",
        name: "Non-Coffee",
        color: "bg-[#2563eb] text-white",
        desc: "Delicious drinks for non-coffee lovers and kids."
      },
      {
        key: "add-ons",
        name: "Add Ons",
        color: "bg-[var(--cream)] text-[var(--coffee-900)] border border-[var(--coffee-200)]",
        desc: "Customize your order with extra shots, dips, and more."
      },
      {
        key: "accessories",
        name: "Accessories",
        color: "bg-[var(--coffee-200)] text-[var(--coffee-900)]",
        desc: "Fun and creative accessories for your drinks and style."
      }
    ];

    function showCategory(category) {
      // Hide all items
      menuItems.forEach(item => {
        item.style.display = 'none';
        item.style.opacity = '0';
      });

      // Show items for selected category with stagger animation
      const categoryItems = document.querySelectorAll(`.menu-item-${category}`);
      categoryItems.forEach((item, index) => {
        setTimeout(() => {
          item.style.display = 'block';
          setTimeout(() => {
            item.style.opacity = '1';
            item.classList.add('animate-fade-in-up');
          }, 50);
        }, index * 100);
      });

      // Update category description
      const categoryData = categories.find(cat => cat.key === category);
      if (categoryData && categoryDescription) {
        categoryDescription.textContent = categoryData.desc;
      }

      // Update button states
      categoryButtons.forEach(btn => {
        const btnCategory = btn.getAttribute('data-category');
        if (btnCategory === category) {
          btn.className = `category-btn px-6 py-3 rounded-full font-medium transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-[var(--pencil)] focus:ring-offset-2 ${categoryData.color} ring-2 ring-[var(--pencil)]`;
        } else {
          btn.className = `category-btn px-6 py-3 rounded-full font-medium transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-[var(--pencil)] focus:ring-offset-2 glass-morphism text-[var(--coffee-700)] hover:bg-[var(--pencil)] hover:text-white`;
        }
      });
    }

    function animateMenu() {
      if (animated) return;
      
      // Animate category buttons
      categoryButtons.forEach((btn, i) => {
        setTimeout(() => {
          btn.style.opacity = '1';
          btn.classList.add('animate-fade-in');
        }, i * 100);
      });

      // Show initial category items
      setTimeout(() => {
        showCategory(currentCategory);
      }, 500);

      animated = true;
    }

    function handleIntersect(entries, observer) {
      entries.forEach(entry => {
        if (entry.isIntersecting) {
          animateMenu();
          observer.disconnect();
        }
      });
    }

    // Intersection observer for scroll-triggered animation
    if (menuSection) {
      const observer = new window.IntersectionObserver(handleIntersect, {
        threshold: 0.2
      });
      observer.observe(menuSection);
    }

    // Category button click handlers
    categoryButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.preventDefault();
        const category = button.getAttribute('data-category');
        if (category && category !== currentCategory) {
          currentCategory = category;
          showCategory(category);
        }
      });
    });
  });
</script>
